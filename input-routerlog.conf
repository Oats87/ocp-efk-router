<source>
  @type tail
  path /var/log/audit-ocp.log
  pos_file /var/log/auditlog.pos
  time_format %Y-%m-%dT%H:%M:%S
  tag auditlog.requests
  format /^(?<time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}).*AUDIT:\s*id="(?<auditlog.id>.*?)"\s*(ip="(?<auditlog.ip>.*?)")?\s*(method="(?<auditlog.medthod>.*?)")?\s*(user="(?<auditlog.user>.*?)")?\s*(groups="(?<auditlog.groups>.*?)")?\s*(as="(?<auditlog.as>.*?)")?\s*(asgroups="(?<auditlog.asgroups>.*?)")?\s*(namespace="(?<auditlog.namespace>.*?)")?\s*(uri="(?<auditlog.uri>.*?)")?\s*(response="(?<auditlog.response>.*?)")?$/
</source>

<filter auditlog**>
  @type record_transformer
  enable_ruby
  <record>
    @timestamp ${record['@timestamp'].nil? ? Time.at(time).getutc.to_datetime.rfc3339(6) : Time.parse(record['@timestamp']).getutc.to_datetime.rfc3339(6)}
    auditlog.hostname ${_HOSTNAME.eql?('localhost') ? (begin; File.open('/etc/docker-hostname') { |f| f.readline }.rstrip; rescue; _HOSTNAME; end) : _HOSTNAME}
  </record>
</filter>

<match auditlog**>
  @type copy
  <store>
    @type elasticsearch_dynamic
    log_level debug
    host "#{ENV['OPS_HOST']}"
    port "#{ENV['OPS_PORT']}"
    scheme https
    index_name .operations.auditlog.${record['@timestamp'].nil? ? Time.at(time).getutc.strftime(@logstash_dateformat) : Time.parse(record['@timestamp']).getutc.strftime(@logstash_dateformat)}

    user fluentd
    password changeme

    client_key "#{ENV['OPS_CLIENT_KEY']}"
    client_cert "#{ENV['OPS_CLIENT_CERT']}"
    ca_file "#{ENV['OPS_CA']}"

    type_name com.redhat.ocp.auditlog

    # there is currently a bug in the es plugin + excon - cannot
    # recreate/reload connections
    reload_connections false
    reload_on_failure false
    flush_interval 5s
    max_retry_wait 300
    disable_retry_limit true
    buffer_queue_limit "#{ENV['BUFFER_QUEUE_LIMIT'] || '1024' }"
    buffer_chunk_limit "#{ENV['BUFFER_SIZE_LIMIT'] || '1m' }"
    # the systemd journald 0.0.8 input plugin will just throw away records if the buffer
    # queue limit is hit - 'block' will halt further reads and keep retrying to flush the
    # buffer to the remote - default is 'exception' because in_tail handles that case
    buffer_queue_full_action "#{ENV['BUFFER_QUEUE_FULL_ACTION'] || 'exception'}"
  </store>
  #<store>
  #  @type stdout
  #</store>
</match>